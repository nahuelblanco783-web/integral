"""
This type stub file was generated by pyright.
"""

from tkinter.font import Font
from typing import Callable, Literal, Optional, Tuple

class CTkFont(Font):
    """
    Font object with size in pixel, independent of scaling.
    To get scaled tuple representation use create_scaled_tuple() method.

    family	The font family name as a string.
    size	The font height as an integer in pixel.
    weight	'bold' for boldface, 'normal' for regular weight.
    slant	'italic' for italic, 'roman' for unslanted.
    underline	1 for underlined text, 0 for normal.
    overstrike	1 for overstruck text, 0 for normal.

    Tkinter Font: https://anzeljg.github.io/rin2/book2/2405/docs/tkinter/fonts.html
    """
    def __init__(self, family: Optional[str] = ..., size: Optional[int] = ..., weight: Literal["normal", "bold"] = ..., slant: Literal["italic", "roman"] = ..., underline: bool = ..., overstrike: bool = ...) -> None:
        ...
    
    def add_size_configure_callback(self, callback: Callable): # -> None:
        """ add function, that gets called when font got configured """
        ...
    
    def remove_size_configure_callback(self, callback: Callable): # -> None:
        """ remove function, that gets called when font got configured """
        ...
    
    def create_scaled_tuple(self, font_scaling: float) -> Tuple[str, int, str]:
        """ return scaled tuple representation of font in the form (family: str, size: int, style: str)"""
        ...
    
    def config(self, *args, **kwargs):
        ...
    
    def configure(self, **kwargs): # -> None:
        ...
    
    def cget(self, attribute_name: str) -> any:
        ...
    
    def copy(self) -> CTkFont:
        ...
    


