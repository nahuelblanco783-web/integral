"""
This type stub file was generated by pyright.
"""

from typing import Callable

class ScalingTracker:
    deactivate_automatic_dpi_awareness = ...
    window_widgets_dict = ...
    window_dpi_scaling_dict = ...
    widget_scaling = ...
    window_scaling = ...
    update_loop_running = ...
    update_loop_interval = ...
    loop_pause_after_new_scaling = ...
    @classmethod
    def get_widget_scaling(cls, widget) -> float:
        ...
    
    @classmethod
    def get_window_scaling(cls, window) -> float:
        ...
    
    @classmethod
    def set_widget_scaling(cls, widget_scaling_factor: float): # -> None:
        ...
    
    @classmethod
    def set_window_scaling(cls, window_scaling_factor: float): # -> None:
        ...
    
    @classmethod
    def get_window_root_of_widget(cls, widget):
        ...
    
    @classmethod
    def update_scaling_callbacks_all(cls): # -> None:
        ...
    
    @classmethod
    def update_scaling_callbacks_for_window(cls, window): # -> None:
        ...
    
    @classmethod
    def add_widget(cls, widget_callback: Callable, widget): # -> None:
        ...
    
    @classmethod
    def remove_widget(cls, widget_callback, widget): # -> None:
        ...
    
    @classmethod
    def remove_window(cls, window_callback, window): # -> None:
        ...
    
    @classmethod
    def add_window(cls, window_callback, window): # -> None:
        ...
    
    @classmethod
    def activate_high_dpi_awareness(cls): # -> None:
        """ make process DPI aware, customtkinter elements will get scaled automatically,
            only gets activated when CTk object is created """
        ...
    
    @classmethod
    def get_window_dpi_scaling(cls, window) -> float:
        ...
    
    @classmethod
    def check_dpi_scaling(cls): # -> None:
        ...
    


