"""
This type stub file was generated by pyright.
"""

from typing import Any, Callable, Optional, Tuple, Union
from .core_widget_classes import CTkBaseClass
from .font import CTkFont
from .image import CTkImage

class CTkLabel(CTkBaseClass):
    """
    Label with rounded corners. Default is fg_color=None (transparent fg_color).
    For detailed information check out the documentation.

    state argument will probably be removed because it has no effect
    """
    _valid_tk_label_attributes = ...
    def __init__(self, master: Any, width: int = ..., height: int = ..., corner_radius: Optional[int] = ..., bg_color: Union[str, Tuple[str, str]] = ..., fg_color: Optional[Union[str, Tuple[str, str]]] = ..., text_color: Optional[Union[str, Tuple[str, str]]] = ..., text_color_disabled: Optional[Union[str, Tuple[str, str]]] = ..., text: str = ..., font: Optional[Union[tuple, CTkFont]] = ..., image: Union[CTkImage, None] = ..., compound: str = ..., anchor: str = ..., wraplength: int = ..., **kwargs) -> None:
        ...
    
    def destroy(self): # -> None:
        ...
    
    def configure(self, require_redraw=..., **kwargs): # -> None:
        ...
    
    def cget(self, attribute_name: str) -> any:
        ...
    
    def bind(self, sequence: str = ..., command: Callable = ..., add: str = ...): # -> None:
        """ called on the tkinter.Label and tkinter.Canvas """
        ...
    
    def unbind(self, sequence: str = ..., funcid: Optional[str] = ...): # -> None:
        """ called on the tkinter.Label and tkinter.Canvas """
        ...
    
    def focus(self): # -> None:
        ...
    
    def focus_set(self): # -> None:
        ...
    
    def focus_force(self): # -> None:
        ...
    


